# Uncomment this line to define a global platform for your project
platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  pod 'EasyPermissionX/Camera'

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

def unsafe_patch_old_sentry_for_xcode_16
  file_SentryCrashMonitor_CPPException = File.join(__dir__, "Pods/Sentry/Sources/SentryCrash/Recording/Monitors/SentryCrashMonitor_CPPException.cpp")
  add_to_SentryCrashMonitor_CPPException = "#include <exception>\n"

  file_SentryCrashMachineContext = File.join(__dir__, "Pods/Sentry/Sources/SentryCrash/Recording/Tools/SentryCrashMachineContext.c")
  add_to_SentryCrashMachineContext = "#include <sys/_types/_ucontext64.h>\n"

  original_content_SentryCrashMonitor_CPPException = File.read(file_SentryCrashMonitor_CPPException)
  unless original_content_SentryCrashMonitor_CPPException.include?(add_to_SentryCrashMonitor_CPPException.strip)
    File.open(file_SentryCrashMonitor_CPPException, "w") do |file|
      file.puts add_to_SentryCrashMonitor_CPPException + original_content_SentryCrashMonitor_CPPException
    end
    puts "[Sentry] Patched file: #{file_SentryCrashMonitor_CPPException}"
  else
    puts "[Sentry] No patch needed for: #{file_SentryCrashMonitor_CPPException}"
  end

  original_content_SentryCrashMachineContext = File.read(file_SentryCrashMachineContext)
  unless original_content_SentryCrashMachineContext.include?(add_to_SentryCrashMachineContext.strip)
    File.open(file_SentryCrashMachineContext, "w") do |file|
      file.puts add_to_SentryCrashMachineContext + original_content_SentryCrashMachineContext
    end
    puts "[Sentry] Patched file: #{file_SentryCrashMachineContext}"
  else
    puts "[Sentry] No patch needed for: #{file_SentryCrashMachineContext}"
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
    end
  end
  unsafe_patch_old_sentry_for_xcode_16()
end
